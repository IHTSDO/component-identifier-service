{
    "swagger": "2.0",
    "info": {
        "title": "Component Identifier Service API",
        "description": "API for the IHTSDO Component Identifier Service.",
        "version": "1.0"
    },
    "produces": ["application/json"],
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/login": {
            "post": {
                "x-swagger-router-controller": "Login",
                "operationId": "login",
                "tags": ["Authentication"],
                "description": "Creates a session, obtaining a token for next operations.",
                "parameters": [
                    {
                        "name": "credentials",
                        "in": "body",
                        "description": "The user credentials.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login OK, Token obtained.",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "x-swagger-router-controller": "Login",
                "operationId": "logout",
                "tags": ["Authentication"],
                "description": "Closes a session, identified by the token.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "body",
                        "description": "The security access token.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Session closed."
                    }
                }
            }
        },
        "/authenticate": {
            "post": {
                "x-swagger-router-controller": "Login",
                "operationId": "authenticate",
                "tags": ["Authentication"],
                "description": "Validates a token, checking if it' assigned to a current session, and retrieves user data.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "body",
                        "description": "The security access token.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Token OK.",
                        "schema": {
                            "$ref": "#/definitions/UserData"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "x-swagger-router-controller": "Login",
                "operationId": "getUsers",
                "tags": ["Authorization"],
                "description": "Retrieves all users.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchString",
                        "in": "query",
                        "description": "The search string.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Users list.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{username}/namespaces/":{
            "get": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "getNamespacesForUser",
                "tags": ["Namespaces"],
                "description": "Returns the list of available namespaces.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Namespace"
                            }
                        }
                    }
                }
            }
        },
        "/users/{username}/schemes/":{
            "get": {
                "x-swagger-router-controller": "Scheme",
                "operationId": "getSchemesForUser",
                "tags": ["Schemes"],
                "description": "Returns the list of available schemes.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Scheme"
                            }
                        }
                    }
                }
            }
        },
        "/users/{username}/groups/": {
            "get": {
                "x-swagger-router-controller": "Login",
                "operationId": "getGroups",
                "tags": ["Authorization"],
                "description": "Retrieves groups for the user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Groups list.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{username}/groups/{groupName}": {
            "post": {
                "x-swagger-router-controller": "Login",
                "operationId": "addMember",
                "tags": ["Authorization"],
                "description": "Adds a User to a Group.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupName",
                        "in": "path",
                        "description": "The Group Name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Groups list.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "x-swagger-router-controller": "Login",
                "operationId": "removeMember",
                "tags": ["Authorization"],
                "description": "Removes a user from a Group.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupName",
                        "in": "path",
                        "description": "The Group Name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Groups list.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/groups/{groupName}/users": {
            "get": {
                "x-swagger-router-controller": "Login",
                "operationId": "getGroupUsers",
                "tags": ["Authorization"],
                "description": "Retrieves groups for the user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupName",
                        "in": "path",
                        "description": "The Group Name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Users list.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sct/namespaces/{namespaceId}/permissions": {
            "get": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "getPermissions",
                "tags": ["Authorization"],
                "description": "Returns list of users with access to this namespace.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "The required namespace id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/NamespacePermission"
                        }
                    }
                }
            }
        },
        "/sct/namespaces/{namespaceId}/permissions/{username}": {
            "post": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "createPermission",
                "tags": ["Authorization"],
                "description": "Creates a permission for this namespace, allowing access for the provided user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "The required namespace id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "The role.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/NamespacePermission"
                        }
                    }
                }
            },
            "delete": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "deletePermission",
                "tags": ["Authorization"],
                "description": "Deletes a permission for this namespace, removing access for the provided user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "The required namespace id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {}
                }
            }
        },
        "/schemes/{schemeName}/permissions": {
            "get": {
                "x-swagger-router-controller": "Scheme",
                "operationId": "getPermissions",
                "tags": ["Authorization"],
                "description": "Returns list of users with access to this namespace.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The required Scheme name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/SchemePermission"
                        }
                    }
                }
            }
        },
        "/schemes/{schemeName}/permissions/{username}": {
            "post": {
                "x-swagger-router-controller": "Scheme",
                "operationId": "createPermission",
                "tags": ["Authorization"],
                "description": "Creates a permission for this Scheme, allowing access for the provided user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The required Scheme name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "The role.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/SchemePermission"
                        }
                    }
                }
            },
            "delete": {
                "x-swagger-router-controller": "Scheme",
                "operationId": "deletePermission",
                "tags": ["Authorization"],
                "description": "Deletes a permission for this Scheme, removing access for the provided user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The required scheme name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {}
                }
            }
        },
        "/sct/namespaces/{namespaceId}": {
            "get": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "getNamespace",
                "tags": ["Namespaces"],
                "description": "Returns the required namespace object.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "The required namespace id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                }
            },
            "delete": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "deleteNamespace",
                "tags": ["Namespaces"],
                "description": "Deletes a namespace.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "The namespace to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Namespace updated.",
                        "schema": {
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                }
            }
        },
        "/sct/namespaces/{namespaceId}/partition/{partitionId}": {
            "put": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "updatePartitionSequence",
                "tags": ["Namespaces"],
                "description": "Updates the partitionId sequence for this namespace.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "The required namespace id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "partitionId",
                        "in": "path",
                        "description": "The required namespace id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "The next value in the sequence.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                }
            }
        },
        "/sct/namespaces": {
            "get": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "getNamespaces",
                "tags": ["Namespaces"],
                "description": "Returns the list of available namespaces.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Namespace"
                            }
                        }
                    }
                }
            },
            "put": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "updateNamespace",
                "tags": ["Namespaces"],
                "description": "Updates a namespace.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespace",
                        "in": "body",
                        "description": "The updated namespace data.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Namespace updated.",
                        "schema": {
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                }
            },
            "post": {
                "x-swagger-router-controller": "Namespace",
                "operationId": "createNamespace",
                "tags": ["Namespaces"],
                "description": "Creates a new namespace.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespace",
                        "in": "body",
                        "description": "The new namespace data.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Namespace created.",
                        "schema": {
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                }
            }
        },
        "/sct/ids/{sctid}": {
            "get": {
                "x-swagger-router-controller": "Sctid",
                "operationId": "getSctid",
                "tags": ["SCTIDS"],
                "description": "Returns the required SCTID Record.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sctid",
                        "in": "path",
                        "description": "The required id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/SCTIDRecord"
                        }
                    }
                }
            }
        },
        "/sct/namespaces/{namespaceId}/systemids/{systemId}": {
            "get": {
                "x-swagger-router-controller": "Sctid",
                "operationId": "getSctidBySystemId",
                "tags": ["SCTIDS"],
                "description": "Returns the required SCTID Record, identified by the systemId.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "The required namespace that contains the SystemId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "systemId",
                        "in": "path",
                        "description": "The required id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/SCTIDRecord"
                        }
                    }
                }
            }
        },
        "/sct/ids": {
            "post": {
                "x-swagger-router-controller": "Sctid",
                "operationId": "processSctidRequest",
                "tags": ["SCTIDS"],
                "description": "Receives a request for a SCTID Operation.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "operation",
                        "in": "body",
                        "description": "The requested operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SCTIDRequest"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Operation ready.",
                        "schema": {
                            "$ref": "#/definitions/SCTIDRecord"
                        }
                    }
                }
            }
        },
        "/sct/ids/bulk": {
            "get": {
                "x-swagger-router-controller": "SctidBulk",
                "operationId": "getSctids",
                "tags": ["SCTIDS"],
                "description": "Returns the required SCTID Records.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sctids",
                        "in": "query",
                        "description": "The required sctids list, separated with commas (,).",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SCTIDRecord"
                            }
                        }
                    }
                }
            },
            "post": {
                "x-swagger-router-controller": "SctidBulk",
                "operationId": "processBulkSctidRequest",
                "tags": ["SCTIDS"],
                "description": "Receives a bulk request for multiple SCTID Operations.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "operation",
                        "in": "body",
                        "description": "The requested operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SCTIDBulkRequest"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Operation ready.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SCTIDRecord"
                            }
                        }
                    }
                }
            }
        },
        "/schemes": {
            "get": {
                "x-swagger-router-controller": "Scheme",
                "operationId": "getSchemes",
                "tags": ["Schemes"],
                "description": "Returns available Identifier Schemes.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Scheme"
                            }
                        }
                    }
                }
            }
        },
        "/schemes/{schemeName}": {
            "get": {
                "x-swagger-router-controller": "Scheme",
                "operationId": "getScheme",
                "tags": ["Schemes"],
                "description": "Returns available Identifier Schemes.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The Scheme Name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/Scheme"
                        }
                    }
                }
            }
        },
        "/scheme/{schemeName}/ids/{schemeId}": {
            "get": {
                "x-swagger-router-controller": "SchemeId",
                "operationId": "getSchemeId",
                "tags": ["SchemeIds"],
                "description": "Returns the required SchemeId Record.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The Scheme Name.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SNOMEDID",
                            "CTV3ID"
                        ]
                    },
                    {
                        "name": "schemeId",
                        "in": "path",
                        "description": "The required id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/SchemeIdRecord"
                        }
                    }
                }
            }
        },
        "/scheme/{schemeName}/systemids/{systemId}": {
            "get": {
                "x-swagger-router-controller": "SchemeId",
                "operationId": "getSchemeIdBySystemId",
                "tags": ["SchemeIds"],
                "description": "Returns the required SchemeId Record, identified by the systemId.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The Scheme Name.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SNOMEDID",
                            "CTV3ID"
                        ]
                    },
                    {
                        "name": "systemId",
                        "in": "path",
                        "description": "The required id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/SchemeIdRecord"
                        }
                    }
                }
            }
        },
        "/scheme/{schemeName}/ids": {
            "post": {
                "x-swagger-router-controller": "SchemeId",
                "operationId": "processSchemeIdRequest",
                "tags": ["SchemeIds"],
                "description": "Receives a request for a SchemeId Operation.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The Scheme Name.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SNOMEDID",
                            "CTV3ID"
                        ]
                    },
                    {
                        "name": "operation",
                        "in": "body",
                        "description": "The requested operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchemeIdRequest"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Operation ready.",
                        "schema": {
                            "$ref": "#/definitions/SchemeIdRecord"
                        }
                    }
                }
            }
        },
        "/scheme/{schemeName}/bulk": {
            "get": {
                "x-swagger-router-controller": "SchemeIdBulk",
                "operationId": "getSchemeIds",
                "tags": ["SchemeIds"],
                "description": "Returns the required SchemeId Records.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The Scheme Name.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SNOMEDID",
                            "CTV3ID"
                        ]
                    },
                    {
                        "name": "schemeIds",
                        "in": "query",
                        "description": "The required schemeIds list, separated with commas (,).",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SchemeIdRecord"
                            }
                        }
                    }
                }
            },
            "post": {
                "x-swagger-router-controller": "SchemeIdBulk",
                "operationId": "processBulkSchemeIdRequest",
                "tags": ["SchemeIds"],
                "description": "Receives a bulk request for multiple SchemeId Operations.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The security access token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schemeName",
                        "in": "path",
                        "description": "The Scheme Name.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SNOMEDID",
                            "CTV3ID"
                        ]
                    },
                    {
                        "name": "operation",
                        "in": "body",
                        "description": "The requested operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchemeIdBulkRequest"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Operation ready.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SchemeIdRecord"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Partition" : {
            "properties": {
                "namespace": {
                    "type": "integer"
                },
                "partitionId": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                }
            }
        },
        "Namespace": {
            "properties": {
                "namespace": {
                    "type": "integer"
                },
                "organizationName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "partitions": {
                    "type": "array",
                    "items": {
                       "$ref": "#/definitions/Partition"
                    }
                }
            }
        },
        "NamespacePermission": {
            "properties": {
                "namespace": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "description": "name of the role (consumer or manager)"
                }
            }
        },
        "SchemePermission": {
            "properties": {
                "scheme": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": ["message"]
        },
        "Scheme": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "SchemeIdRecord" : {
            "properties": {
                "scheme": {
                    "type": "string"
                },
                "schemeId": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "checkDigit": {
                    "type": "integer"
                },
                "systemId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "SchemeIdRequest" : {
            "properties" : {
                "action": {
                    "type": "string",
                    "description": "The action requested",
                    "enum" : [
                        "generate",
                        "reserve",
                        "register",
                        "release",
                        "publish",
                        "deprecate"
                    ]
                },
                "scheme": {
                    "type": "string",
                    "description": "The Scheme used for operation"
                },
                "schemeId": {
                    "type": "string",
                    "description": "The Scheme Identifier, only necessary to register, release, deprecate, publish"
                },
                "systemId": {
                    "type": "string",
                    "description": "The systemId, optional, a reference to an existing ID on the user environment, external to this API"
                },
                "software": {
                    "type": "string",
                    "description": "The name of the software sending the request, mandatory"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date, only necessary on reserve actions"
                },
                "comment": {
                    "type": "string",
                    "description": "A comment about the action, optional."
                }
            }
        },
        "SchemeIdBulkRequest" : {
            "properties" : {
                "action": {
                    "type": "string",
                    "description": "The action requested",
                    "enum" : [
                        "generate",
                        "reserve",
                        "register",
                        "release",
                        "publish",
                        "deprecate",
                        "getBySchemeId",
                        "getBySystemId"
                    ]
                },
                "scheme": {
                    "type": "string",
                    "description": "The Scheme used for operation"
                },
                "quantity": {
                    "type": "integer",
                    "description": "Number of actions to be performed"
                },
                "schemeIds": {
                    "description": "The Scheme identifiers, only necessary to register, release, deprecate, publish",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemId": {
                    "description": "The systemIds, optional, a reference to an existing ID on the user environment, external to this API",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "software": {
                    "type": "string",
                    "description": "The name of the software sending the request, mandatory"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date, only necessary on reserve actions"
                },
                "comment": {
                    "type": "string",
                    "description": "A comment about the action, optional."
                }
            }
        },
        "SCTIDRecord" : {
            "properties": {
                "sctid": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "namespace": {
                    "type": "integer"
                },
                "partitionId": {
                    "type": "string"
                },
                "checkDigit": {
                    "type": "integer"
                },
                "systemId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "SCTIDRequest" : {
            "properties" : {
                "action": {
                    "type": "string",
                    "description": "The action requested",
                    "enum" : [
                        "generate",
                        "reserve",
                        "register",
                        "release",
                        "publish",
                        "deprecate"
                    ]
                },
                "sctid": {
                    "type": "string",
                    "description": "The SCTID, only necessary to register, release, deprecate, publish"
                },
                "namespace": {
                    "type": "integer",
                    "description": "The namespace, always mandatory"
                },
                "partitionId": {
                    "type": "string",
                    "description": "The partitionId, always mandatory. '10' for concepts, '11' for descriptions, '12' for relationships"
                },
                "systemId": {
                    "type": "string",
                    "description": "The systemId, optional, a reference to an existing ID on the user environment, external to this API"
                },
                "software": {
                    "type": "string",
                    "description": "The name of the software sending the request, mandatory"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date, only necessary on reserve actions"
                },
                "comment": {
                    "type": "string",
                    "description": "A comment about the action, optional."
                }
            }
        },
        "SCTIDBulkRequest" : {
            "properties" : {
                "action": {
                    "type": "string",
                    "description": "The action requested",
                    "enum" : [
                        "generate",
                        "reserve",
                        "register",
                        "release",
                        "publish",
                        "deprecate",
                        "getBySctid",
                        "getBySystemId"
                    ]
                },
                "quantity": {
                    "type": "integer",
                    "description": "Number of actions to be performed"
                },
                "sctids": {
                    "description": "The SCTIDs, only necessary to register, release, deprecate, publish",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "namespace": {
                    "type": "integer",
                    "description": "The namespace, always mandatory"
                },
                "partitionId": {
                    "type": "string",
                    "description": "The partitionId, always mandatory. '10' for concepts, '11' for descriptions, '12' for relationships"
                },
                "systemId": {
                    "description": "The systemIds, optional, a reference to an existing ID on the user environment, external to this API",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "software": {
                    "type": "string",
                    "description": "The name of the software sending the request, mandatory"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date, only necessary on reserve actions"
                },
                "comment": {
                    "type": "string",
                    "description": "A comment about the action, optional."
                }
            }
        },
        "Credentials" : {
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Token" : {
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "UserData" : {
            "properties": {
                "name": {
                    "type": "string"
                },
                "first-name":  {
                    "type": "string"
                },
                "last-name":  {
                    "type": "string"
                },
                "display-name":  {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        }
    }
}